import cv2
import mediapipe as mp
import time
import numpy as np

# MediaPipe 설정
mp_face_mesh = mp.solutions.face_mesh
face_mesh = mp_face_mesh.FaceMesh(static_image_mode=False, max_num_faces=1, refine_landmarks=True, min_detection_confidence=0.5)
mp_drawing = mp.solutions.drawing_utils

# EAR 계산용 눈 랜드마크 인덱스
LEFT_EYE_LANDMARKS = [33, 133, 160, 158, 153, 144, 163, 7]
RIGHT_EYE_LANDMARKS = [362, 263, 387, 385, 380, 373, 390, 249]

def euclidean(p1, p2):
    return np.linalg.norm(np.array(p1) - np.array(p2))

def compute_EAR(eye_pts):
    vert1 = euclidean(eye_pts[1], eye_pts[5])
    vert2 = euclidean(eye_pts[2], eye_pts[4])
    horiz = euclidean(eye_pts[0], eye_pts[3])
    return (vert1 + vert2) / (2.0 * horiz)

# 웹캠 열기
cap = cv2.VideoCapture(0)
prev_time = 0

while cap.isOpened():
    success, frame = cap.read()
    if not success:
        break

    frame = cv2.flip(frame, 1)
    rgb_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
    results = face_mesh.process(rgb_frame)

    if results.multi_face_landmarks:
        for landmarks in results.multi_face_landmarks:
            h, w = frame.shape[:2]

            left_eye = [(int(landmarks.landmark[i].x * w), int(landmarks.landmark[i].y * h)) for i in LEFT_EYE_LANDMARKS]
            right_eye = [(int(landmarks.landmark[i].x * w), int(landmarks.landmark[i].y * h)) for i in RIGHT_EYE_LANDMARKS]

            left_ear = compute_EAR(left_eye)
            right_ear = compute_EAR(right_eye)
            avg_ear = (left_ear + right_ear) / 2.0

            blink = avg_ear < 0.20

            for pt in left_eye:
                cv2.circle(frame, pt, 2, (0, 255, 0), -1)
            for pt in right_eye:
                cv2.circle(frame, pt, 2, (0, 255, 255), -1)

            status_text = "Blinking" if blink else "Open"
            cv2.putText(frame, f"EAR: {avg_ear:.2f} ({status_text})", (30, 50), cv2.FONT_HERSHEY_SIMPLEX, 0.7, (0,0,255), 2)

    curr_time = time.time()
    fps = 1 / (curr_time - prev_time) if prev_time else 0
    prev_time = curr_time
    cv2.putText(frame, f"FPS: {int(fps)}", (30, 90), cv2.FONT_HERSHEY_SIMPLEX, 0.6, (255,255,255), 1)

    cv2.imshow("Eye Tracker", frame)

    # 종료 조건 (ESC, 'q', 창 닫힘)
    key = cv2.waitKey(1) & 0xFF
    win_open = cv2.getWindowProperty("Eye Tracker", cv2.WND_PROP_VISIBLE) >= 1
    if key == 27 or key == ord('q') or not win_open:
        break

cap.release()
cv2.destroyAllWindows()

